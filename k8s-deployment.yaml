---
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: sip-edge-rs
  labels:
    name: sip-edge-rs

---
# ConfigMap for SIP Router configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: sip-edge-rs-config
  namespace: sip-edge-rs
data:
  # Environment variables for configuration
  SIP_TCP_ADDR: "0.0.0.0:5060"
  SIP_UDP_ADDR: "0.0.0.0:5060"
  SIP_TLS_ADDR: "0.0.0.0:5061"
  RUST_LOG: "sip_edge_rs=info"

---
# Secret for TLS certificates
apiVersion: v1
kind: Secret
metadata:
  name: sip-edge-rs-tls
  namespace: sip-edge-rs
type: kubernetes.io/tls
data:
  # Base64 encoded TLS certificate and key
  # Replace with your actual certificates
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCi4uLgotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t

---
# Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sip-edge-rs
  namespace: sip-edge-rs

---
# Security Policy
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: sip-edge-rs-pdb
  namespace: sip-edge-rs
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: sip-edge-rs

---
# Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: sip-edge-rs-network-policy
  namespace: sip-edge-rs
spec:
  podSelector:
    matchLabels:
      app: sip-edge-rs
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector: {}
    - namespaceSelector:
        matchLabels:
          name: sip-clients
    ports:
    - protocol: UDP
      port: 5060
    - protocol: TCP
      port: 5060
    - protocol: TCP
      port: 5061
  egress:
  - to:
    - podSelector: {}
    ports:
    - protocol: UDP
      port: 5060
    - protocol: TCP
      port: 5060
    - protocol: TCP
      port: 5061
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53

---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sip-edge-rs
  namespace: sip-edge-rs
  labels:
    app: sip-edge-rs
spec:
  replicas: 3
  selector:
    matchLabels:
      app: sip-edge-rs
  template:
    metadata:
      labels:
        app: sip-edge-rs
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      serviceAccountName: sip-edge-rs
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: sip-edge-rs
        image: your-registry.io/sip-edge-rs:latest
        imagePullPolicy: Always
        ports:
        - name: sip-udp
          containerPort: 5060
          protocol: UDP
        - name: sip-tcp
          containerPort: 5060
          protocol: TCP
        - name: sip-tls
          containerPort: 5061
          protocol: TCP
        env:
        - name: SIP_TLS_CERT
          value: /etc/sip-edge-rs/certs/tls.crt
        - name: SIP_TLS_KEY
          value: /etc/sip-edge-rs/certs/tls.key
        envFrom:
        - configMapRef:
            name: sip-edge-rs-config
        resources:
          requests:
            memory: "256Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "2000m"
        livenessProbe:
          tcpSocket:
            port: sip-tcp
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: sip-tcp
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: tls-certs
          mountPath: /etc/sip-edge-rs/certs
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
      volumes:
      - name: tls-certs
        secret:
          secretName: sip-edge-rs-tls
          defaultMode: 0400
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - sip-edge-rs
              topologyKey: kubernetes.io/hostname

---
# Service for TCP/TLS
apiVersion: v1
kind: Service
metadata:
  name: sip-edge-rs-tcp
  namespace: sip-edge-rs
  labels:
    app: sip-edge-rs
spec:
  type: LoadBalancer
  selector:
    app: sip-edge-rs
  ports:
  - name: sip-tcp
    port: 5060
    targetPort: 5060
    protocol: TCP
  - name: sip-tls
    port: 5061
    targetPort: 5061
    protocol: TCP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 3600

---
# Service for UDP
apiVersion: v1
kind: Service
metadata:
  name: sip-edge-rs-udp
  namespace: sip-edge-rs
  labels:
    app: sip-edge-rs
  annotations:
    # For cloud providers that support UDP load balancing
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
spec:
  type: LoadBalancer
  selector:
    app: sip-edge-rs
  ports:
  - name: sip-udp
    port: 5060
    targetPort: 5060
    protocol: UDP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 3600

---
# HorizontalPodAutoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: sip-edge-rs-hpa
  namespace: sip-edge-rs
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sip-edge-rs
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 1
        periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max

---
# PodSecurityPolicy (if PSP is enabled in your cluster)
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: sip-edge-rs-psp
  namespace: sip-edge-rs
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
  - ALL
  allowedCapabilities:
  - NET_BIND_SERVICE
  volumes:
  - 'configMap'
  - 'emptyDir'
  - 'projected'
  - 'secret'
  - 'downwardAPI'
  - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAs'
    ranges:
    - min: 1000
      max: 1000
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: true